#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<queue>
#include<vector>
using namespace std;

const int maxn=160;
const int inf=300;

struct node{
    int ls,rs;
};
vector<int> edge[maxn];
int f[maxn][maxn];
int du[maxn];
int ans=inf;
int n,p,u,v;

void dp(int u,int root){
    f[u][1]=du[u];
    for (int i=0;i<edge[u].size();++i){
        int v=edge[u][i];
        if (v!=root){
            dp(v,u);
            for (int j=p;j>=1;--j)
              for (int k=1;k<=j;++k)
                f[u][j]=min(f[u][j],f[u][j-k]+f[v][k]-2);
        }        
    }
    ans=min(ans,f[u][p]);
}

int main(){
	//freopen("discovery10.in","r",stdin);
	//freopen("discovery10.out","w",stdout);
    scanf("%d%d",&n,&p);
    memset(f,1,sizeof(f));
    for (int i=1;i<n;++i){
        scanf("%d%d",&u,&v);
        edge[u].push_back(v);
        edge[v].push_back(u);
        du[u]++;
        du[v]++;
    }
    dp(1,0);
    printf("%d",ans);
    //fclose(stdin);
    //fclose(stdout);
    return 0;
}
