#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <stack>
using namespace std;
const int maxn = 1000+5;
bool E[maxn][maxn];
int s[maxn],f[maxn], color[maxn];
stack<int> staA,staB;
int n;
void  NoAnswer() {
	cout<<"0"<<endl;
	exit(0);
}
void  dfs(int x, int c) {
	color[x] = c;
	for (int i = 1; i <= n; ++i)
		if (E[x][i]) {
			if (color[i] == c ) NoAnswer();
			if (!color[i])
				dfs(i, 3-c);
		}
}
int main() {
	cin>>n;
	for ( int  i = 1 ;  i <= n ; ++i) cin>>s[i];
	f[n+1] = 0xfffffff;
	for (int i = n; i>=1; --i) f[i] = min(s[i], f[i+1]);


	for (int i = 1; i < n  ; ++i)
		for (int j = i+1; j <=n ; ++j)
			if (s[i] < s[j] && f[j+1]<s[i])
				E[i][j] = E[j][i] = true;

	for (int i = 1; i <= n; ++i)
		if ( !color[i]) dfs(i,1);


	int aim = 1;
	for (int i = 1; i <= n; ++i) {
		if (color[i]==1) {
			staA.push(s[i]);
			printf("a ");
		} else {
			staB.push(s[i]);
			printf("c ");
		}

		while (!staA.empty() && staA.top() == aim ||
		        !staB.empty() && staB.top()== aim) {
			if (!staA.empty() && staA.top()== aim) {
				staA.pop();
				printf("b ");
			} else {
				staB.pop();
				printf("d ");
			}
			aim ++;
		}
	}
	return 0;
}
